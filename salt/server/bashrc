# Copyright (C) 2018 Nicolas Lamirault <nicolas.lamirault@gmail.com>

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

#
# Prompt
# -------------------------------------------------------------

default_username='unknown'
default_os='unknown'

PROMPTCHAR='\$'

[[ "$(uname -n)"  =~ "master" ]] && HOST="Master"
[[ "$(uname -n)"  =~ "node" ]] && HOST="Node"

if [ "$(uname -m)" = armv6l ]; then
  OSNAME="${HOST}/armv6: "
elif [ "$(uname -m)" = armv7l ]; then
  OSNAME="${HOST}/armv7: "
elif [ "$(uname -m)" = aarch64 ]; then
  OSNAME="${HOST}/arm64: "
else
  OSNAME="${HOST}: "
fi

if tput setaf 1 &> /dev/null; then
  tput sgr0
  if [[ $(tput colors) -ge 256 ]] 2>/dev/null; then
    BLUE=$(tput setaf 4)
    MAGENTA=$(tput setaf 9)
    ORANGE=$(tput setaf 172)
    GREEN=$(tput setaf 70)
    PURPLE=$(tput setaf 141)
  else
    BLUE=$(tput setaf 4)
    MAGENTA=$(tput setaf 5)
    ORANGE=$(tput setaf 3)
    GREEN=$(tput setaf 2)
    PURPLE=$(tput setaf 1)

  fi
  BOLD=$(tput bold)
  RESET=$(tput sgr0)
  else
    BLUE="\033[1;34m"
    MAGENTA="\033[1;31m"
    ORANGE="\033[1;33m"
    GREEN="\033[1;32m"
    PURPLE="\033[1;35m"
    BOLD=""
    RESET="\033[m"
  fi

# Only show username/host if not default
function usernamehost() {
  if [ "$USER" != $default_username ]; then
    echo "${BLUE}${OSNAME}${MAGENTA}$USER${RESET}${BOLD}@${ORANGE}$HOSTNAME${RESET}${BOLD} in ";
  else
    echo "${BLUE}${OSNAME}";
  fi
}

PS1="\[\e]2;$PWD\[\a\]\[\e]1;\]$(basename "$(dirname "$PWD")")/\W\[\a\]${BOLD}$(usernamehost)\[$GREEN\]\w\[$RESET\]\[$BOLD\]\n${PROMPTCHAR} \[$RESET\]"

#
# History
# -------------------------------------------------------------


# don't put duplicate lines in the history. See bash(1) for more options
# ... or force ignoredups and ignorespace
HISTCONTROL=ignoredups:ignorespace

# append to the history file, don't overwrite it
shopt -s histappend

shopt -s histreedit
shopt -s histverify

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000
export HISTTIMEFORMAT="%h/%d - %H:%M:%S "


#
# Kubernetes
# -------------------------------------------------------------

K8S_BINARIES=("kubectl")

for BIN in ${K8S_BINARIES[@]}; do
  if $(which ${BIN} > /dev/null 2>&1); then
    source <(${BIN} completion bash)
  fi
done
